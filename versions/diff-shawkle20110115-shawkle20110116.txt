256a257,342
> def urlify_string(s):
>     urls = r'(http|telnet|gopher|file|wais|ftp)'
>     ltrs = r'\w';
>     gunk = r'/#~:.?+=&%@!\-'
>     punc = r'.:?\-'
>     any  = ltrs + gunk + punc 
>     pat = re.compile(r"""
>       \b                    # start at word boundary
>       (                     # begin \1  {
>        %(urls)s  :          # need resource and a colon
>        [%(any)s] +?         # followed by one or more
>                             #  of any valid character, but
>                             #  be conservative and take only
>                             #  what you need to....
>       )                     # end   \1  }
>       (?=                   # look-ahead non-consumptive assertion
>        [%(punc)s]*          # either 0 or more punctuation
>        [^%(any)s]           #   followed by a non-url char
>        |                    # or else
>        $                    #   then end of the string
>       )
>     """%locals(), re.VERBOSE | re.IGNORECASE)
>     return re.sub(pat, r"<A HREF=\1>\1</A>", s)
> 
> def urlify(listofdatafiles, pathmappings, pathprettify, htmldir, cloudfile):
>     """For each file in list of files, turn create a urlified (HTML) file
>     in the specified, starting each file with the contents of an optional 
>     "cloud file", if desired."""
>     cloudfilelines = []
>     if os.path.isfile(cloudfile):
>         cloudfile = open(cloudfile, 'r')
>         cloudfilelines = cloudfile.readlines()
>         cloudfile.close()
>     if not os.path.isdir(htmldir):
>         print 'Creating directory', htmldir
>         os.mkdir(htmldir)
>     else:
>         try:
>             shutil.rmtree(htmldir)
>             print 'Removing and re-creating directory', htmldir
>             os.mkdir(htmldir)
>         except:
>             print 'Could not remove and re-create directory', htmldir
>             sys.exit()
>     for file in listofdatafiles:
>         try:
>             openfile = open(file, 'r')
>             openfilelines = openfile.readlines()
>             openfilelines = cloudfilelines + openfilelines
>         except:
>             print 'Cannot open', file, '- exiting...'
>             sys.exit()
>         openfile.close()
>         urlifiedlines = []
>         for line in openfilelines:
>             for pathmap in pathmappings:
>                 old = pathmap[0]
>                 new = pathmap[1]
>                 line = line.replace(old, new)
>             line = urlify_string(line)
>             for visualimprovement in pathprettify:
>                 ugly = visualimprovement[0]
>                 pretty = visualimprovement[1]
>                 line = line.replace(ugly, pretty)
>             urlifiedlines.append(line)
>         filehtml = htmldir + '/' + file + '.html'
>         try:
>             openfilehtml = open(filehtml, 'w')
>             print 'Creating', filehtml
>         except:
>             print 'Cannot open', filehtml, '- exiting...'
>             sys.exit()
>         openfilehtml.write('<PRE>\n')
>         linenumber = 1
>         field1before = ''
>         for urlifiedline in urlifiedlines:
>             field1 = urlifiedline.split()[0]
>             if linenumber > 1:
>                 if field1before != field1:
>                     openfilehtml.write('\n')
>             field1before = field1
>             linenumber += 1
>             openfilehtml.write(urlifiedline)
>         openfilehtml.write('</PRE>\n')
>         openfilehtml.close()
> 
261,262c347,348
<     rules = getrules(['.arules', '.rules'])                        # Demo rules
<     #rules = getrules(['/home/tbaker/u/agenda/.arules', '.rules']) # Tom's rules
---
>     #rules = getrules(['.arules', '.rules'])                        # Demo rules
>     rules = getrules(['/home/tbaker/u/agenda/.arules', '.rules']) # Tom's rules
268,269c354,355
<     filemappings = getmappings('.filemappings')                        # Demo filemappings
<     #filemappings = getmappings('/home/tbaker/u/agenda/.filemappings') # Tom's filemappings
---
>     #filemappings = getmappings('.filemappings')                        # Demo filemappings
>     filemappings = getmappings('/home/tbaker/u/agenda/.filemappings') # Tom's filemappings
270a357,363
>     datafilesafter = datals()
>     #pathmappings = getmappings('.pathmappings')                        # Demo path mappings
>     pathmappings = getmappings('/home/tbaker/u/agenda/.pathmappings') # Tom's path mappings
>     #pathprettify = getmappings('.pathprettify')                        # Demo prettifier mappings
>     pathprettify = getmappings('/home/tbaker/u/agenda/.pathprettify') # Tom's prettifier mappings
>     #urlify(datafilesafter, pathmappings, pathprettify, '.html', '_cloud')                        # Demo
>     urlify(datafilesafter, pathmappings, pathprettify, '.html', '/home/tbaker/u/agenda/_cloud') # Tom's
